/**
 * SHR REST Client
 * SHR REST Client
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  // if (typeof define === 'function' && define.amd) {
  //   // AMD. Register as an anonymous module.
  //   define(['ApiClient'], factory);
  // } else 
  if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShrRestClient) {
      root.ShrRestClient = {};
    }
    root.ShrRestClient.DefaultApi = factory(root.ShrRestClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * Default service.
   * @module api/DefaultApi
   * @version 0.0.1
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:api/DefaultApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getPatientById operation.
     * @callback module:api/DefaultApi~getPatientByIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find patient by SHR ID
     * Returns a single patient record
     * @param {String} shrId ID of patient to return
     * @param {module:api/DefaultApi~getPatientByIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getPatientById = function(shrId, callback) {
      var postBody = null;

      // verify the required parameter 'shrId' is set
      if (shrId === undefined || shrId === null) {
        throw new Error("Missing the required parameter 'shrId' when calling getPatientById");
      }


      var pathParams = {
        'shrId': shrId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/xml', 'application/json'];
      var returnType = null;

      // return this.apiClient.callApi(
      //   '/patient/{shrId}', 'GET',
      //   pathParams, queryParams, headerParams, formParams, postBody,
      //   authNames, contentTypes, accepts, returnType, callback
      // );
      
      // Synchronous call
      // TODO: This should be replaced with the above code, which was generated and is async
      var xmlHttp = new XMLHttpRequest();
      xmlHttp.open("GET", 'http://localhost:3001/api/patient/-1', false);
      xmlHttp.send(null);
      return xmlHttp.responseText;
    }
  };

  return exports;
}));
